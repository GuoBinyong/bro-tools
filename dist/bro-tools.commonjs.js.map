{"version":3,"sources":["webpack://broTools/webpack/bootstrap","webpack://broTools/external {\"root\":\"comTools\",\"commonjs2\":\"com-tools\",\"commonjs\":\"com-tools\",\"amd\":\"com-tools\"}","webpack://broTools/external {\"root\":\"esExpand\",\"commonjs2\":\"es-expand\",\"commonjs\":\"es-expand\",\"amd\":\"es-expand\"}","webpack://broTools/./src/Location.js","webpack://broTools/./src/URL.js","webpack://broTools/./src/URLSearchParams.js","webpack://broTools/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","propertyDescriptors","searchParams","window","URLSearchParams","this","search","set","newValue","toString","params","parseQueryString","JSON","correctParse","queryStringify","stringify","defineProperties","Location","globalThis","URL","webkitURL","toParams","resetParams","stringifyUrlByURLClass","urlObj","replace","constructor","href","protocol","host","pathname","hash","urlInst","pathURLInst","oriSearch","separ","setParams","parseUrlByURLClass","url","hostname","port","username","password","origin","_URLsearchParamsInst_","_URLSearchParamsConstructor_","forEach","clear","safelyIterate","keys","appendParams","paramsSP","String","append","elementIsMatchSelector","element","selector","parentNode","document","contains","elemList","querySelectorAll","Array","from","some","qsElem","isSameNode","elementIsMatchOption","option","every","keyMatch","toLowerCase","localName","tagName","id","isArray","classList","isContains","className","isMatchSelector","elementIsMatchSomeOptions","optionArr","createManyTimesEventListener","handler","times","timeout","paramList","undefined","eventMap","event","eventType","type","eventList","sameEvent","find","eventItem","index","target","listenTarget","currentTarget","currentTimes","setTimeout","currentEvent","handlerParamListh","concat","apply","myEventTypeList","currentEventIndex","indexOf","splice","push","focusInputOnTargetOfEvent","targetTests","eventName","excludeInput","addEventListener","testArr","test","isMatchOption","testTarget","focus","inputDom","getElementsByTagName","loadScript","scriptProps","src","otherPross","scriptEle","createElement","assign","body","appendChild","prohibitWindowHeightChangeWhenInput","cancel","focusinHandler","__prohibitWindowHeightChangeWhenInput_Focusin_Handler__","removeEventListener","focusoutHandler","__prohibitWindowHeightChangeWhenInput_Focusout_Handler__","htmlDom","documentElement","htmlStyle","style","bodyDom","bodyStyle","__originalHeightStyle__","html","height","compStyleOfHtml","getComputedStyle","compStyleOfBody","oriHeightStyle","Element","isMatchSomeOptions"],"mappings":"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","file":"bro-tools.commonjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"com-tools\");","module.exports = require(\"es-expand\");","import {parseQueryString,queryStringify} from \"com-tools\"\n\n\n\nlet propertyDescriptors = {\n  /**\n   * searchParams\n   * 注意：\n   * 该属性是计算属性，每一都会返回一个新的 URLSearchParams 实例；所以，若想通过该属性更改url的参数，需要给该属性重新赋值，而不能基于该属性返回的 URLSearchParams 的实例设置；\n   */\n  searchParams: {\n    enumerable: false,\n    get: function () {\n      return new window.URLSearchParams(this.search);\n    },\n\n    set:function (newValue) {\n      this.search = newValue.toString();\n    }\n  },\n\n\n  /**\n   * get:把 URLSearchParams 转换对象形式；\n   * set: newValue : Object | string | URLSearchParams    把当前URL的查询参数重置成  params\n   */\n  params: {\n    enumerable: false,\n    get: function () {\n      return parseQueryString(this.search,function (value) {\n        return JSON.correctParse(value);\n      });\n    },\n\n    set:function (newValue) {\n      this.search = queryStringify(newValue,function (value,key,params) {\n        if (typeof value == \"object\"){\n          value = JSON.stringify(value);\n        }\n        return value;\n      });\n    }\n  },\n};\n\n\nObject.defineProperties(Location.prototype, propertyDescriptors);\n","//URL扩展：开始\nif (!globalThis.URL && globalThis.webkitURL) {\n  globalThis.URL = globalThis.webkitURL;\n}\n\n\nif (globalThis.URL) {\n\n  let propertyDescriptors = {\n\n    /**\n     * get:把 URLSearchParams 转换对象形式；\n     * set: newValue : Object | string | URLSearchParams    把当前URL的查询参数重置成  params\n     */\n    params: {\n      enumerable: false,\n      get: function () {\n        return this.searchParams.toParams();\n      },\n\n      set: function (newValue) {\n        this.searchParams.resetParams(newValue);\n      }\n    },\n  };\n\n\n  Object.defineProperties(globalThis.URL.prototype, propertyDescriptors);\n}\n\n//URL扩展：结束\n\n\n\n\n\n\n\n\n//依赖 URL 和 URLSearchParams 的解析：开始\n\n\n/**\n * 字符串化 url 对象\n * @param urlObj : Object | URL | Location | string | 其它    必选；url 对象\n * @param replace : boolean     可选；默认值：false ;  url参数部分是否需要把旧的给替换掉\n * @returns urlStr  : string   返回url字符串\n *\n *\n *\n * @property urlObj.href  : string    字符串形式的url地址\n * @property urlObj.protocol  : string    包含URL对应协议的一个DOMString，最后有一个\":\"。\n * @property urlObj.host  : string    包含了域名的一个DOMString，可能在该串最后带有一个\":\"并跟上URL的端口号\n * @property urlObj.pathname  : string    包含URL中路径部分的一个DOMString，开头有一个“/\"。\n * @property urlObj.hash  : string    包含块标识符的DOMString，开头有一个“#”。\n * @property urlObj.params  : string | Object    url的参数对象 或者 字符串\n *\n */\nexport function stringifyUrlByURLClass(urlObj, replace){\n\n\n  if (typeof urlObj != \"object\"){\n    return urlObj;\n  }\n\n  let urlType = urlObj.constructor.name;\n\n  switch (urlType){\n    case \"URL\" :\n    case \"Location\" :{\n      return urlObj.href;\n    }\n    default:{\n      var { href, protocol, host, pathname, params, hash} = urlObj;\n    }\n  }\n\n\n\n\n  let urlInst = new globalThis.URL(href);\n\n  if (protocol){\n    urlInst.protocol = protocol ;\n  }\n\n  if (host) {\n    urlInst.host = host;\n  }\n\n  if (pathname) {\n    let pathURLInst = new globalThis.URL(pathname,href);\n    urlInst.pathname = pathURLInst.pathname;\n  }\n\n  if (hash) {\n    urlInst.hash = hash;\n  }\n\n\n\n  if (params){\n    let searchParams = urlInst.searchParams\n\n    let paramsType = typeof params;\n\n    if (typeof params != \"object\") {\n      if (replace) {\n        urlInst.search = params;\n      } else {\n        let oriSearch = urlInst.search;\n        let separ = oriSearch ? \"&\" : \"\";\n        urlInst.search = oriSearch + separ + params;\n      }\n    } else {\n\n      if (replace) {\n        searchParams.resetParams(params);\n      }else {\n        searchParams.setParams(params);\n      }\n\n    }\n\n  }\n\n\n\n\n  return urlInst.href;\n\n}\n\n\n\n\n\n\n\n/**\n * 把 url 解析成普通的对象\n * @param url : string | URL | Location   必选；url 字符串 或者 URL、Location 实例\n * @returns urlObj  : { href, protocol,host, hostname,port,pathname,search, hash,username,password,origin,searchParams,params }   返回 包含URL所有信息的普通对象\n *\n *\n * @property urlObj.params  : Object    url的参数对象\n * 注意： urlObj 的其它属性跟 URL 实例的属性一样；即实现了 URLUtils 中定义的属性\n *\n */\nexport function parseUrlByURLClass(url){\n\n  let urlInst = url;\n  if (typeof url == \"string\"){\n    urlInst = new globalThis.URL(url);\n  }\n\n  var { href, protocol,host, hostname,port,pathname,search, hash,username,password,origin,searchParams } = urlInst;\n\n  let urlObj = { href, protocol,host, hostname,port,pathname,search, hash,username,password,origin,searchParams };\n\n\n  if (!searchParams && search) {\n    searchParams = new globalThis.URLSearchParams(search);\n  }\n\n  if  (searchParams){\n    var params = searchParams.toParams();\n  }\n\n  urlObj.params = params;\n\n  return urlObj;\n}\n\n\n\n\n\n//依赖 URL 和 URLSearchParams 的解析：结束\n\n\n","import {safelyIterate} from \"com-tools\"\n\n\nif (!globalThis.URLSearchParams && globalThis.URL) {\n  var _URLsearchParamsInst_ = (new globalThis.URL(\"gby://guo.bin.yong\")).searchParams;\n  var _URLSearchParamsConstructor_ = _URLsearchParamsInst_ && _URLsearchParamsInst_.constructor;\n  if (typeof _URLSearchParamsConstructor_ == \"function\") {\n    globalThis.URLSearchParams = _URLSearchParamsConstructor_;\n  }\n}\n\n\nif (globalThis.URLSearchParams) {\n\n\n  let propertyDescriptors = {\n\n    /**\n     * toParams()\n     * 把 URLSearchParams 转换对象形式；\n     */\n    toParams: {\n      enumerable: false,\n      value: function () {\n        let params = {};\n\n        this.forEach(function (value, key) {\n          params[key] = value;\n        });\n\n        return params;\n      }\n    },\n\n    /**\n     * clear()\n     * 清除所有的 key\n     */\n    clear: {\n      enumerable: false,\n      value: function () {\n        safelyIterate(this.keys(), (key) => {\n          this.delete(key);\n        });\n      }\n    },\n\n\n    /**\n     * appendParams(params)\n     * 将 params  对象自身 或 查询字符串 的每一个可枚举成员都插入一个新搜索参数。\n     * @param params : Object | string | URLSearchParams  该 对象自身 或 查询字符串 的所有成员都会被插入进来\n     *\n     * 注意：不要质疑下面的 switch 代码的逻辑，这是正确且高效的，这样写也是为了减少代码量\n     */\n    appendParams: {\n      enumerable: false,\n      value: function (params) {\n\n        var paramsSP = params;\n        switch (params.constructor) {\n          case String: {\n            paramsSP = new globalThis.URLSearchParams(params);\n          }\n          case globalThis.URLSearchParams: {\n            paramsSP.forEach((value, key) => {\n              this.append(key, value);\n            });\n            break;\n          }\n\n          default: {\n\n            Object.keys(params).forEach((key) => {\n              this.append(key, params[key]);\n            });\n\n          }\n        }\n\n\n      }\n    },\n\n\n    /**\n     * setParams(params)\n     * URLSearchParams接口的 setParams(params) 方法用于将 params  对象自身 或 查询字符串 的所有可枚举成员 设置成搜索参数的成员。如果设置前已经存在匹配的值，该方法会删除多余的，如果将要设置的值不存在，则创建它\n     * @param params : Object | string | URLSearchParams 该 对象自身 或 查询字符串 的所有成员都会被插入进来\n     *\n     * 注意：不要质疑下面的 switch 代码的逻辑，这是正确且高效的，这样写也是为了减少代码量\n     */\n    setParams: {\n      enumerable: false,\n      value: function (params) {\n\n        var paramsSP = params;\n        switch (params.constructor) {\n          case String: {\n            paramsSP = new globalThis.URLSearchParams(params);\n          }\n          case globalThis.URLSearchParams: {\n            paramsSP.forEach((value, key) => {\n              this.set(key, value);\n            });\n            break;\n          }\n\n          default: {\n\n            Object.keys(params).forEach((key) => {\n              this.set(key, params[key]);\n            });\n\n          }\n        }\n\n\n      }\n    },\n\n\n    /**\n     * resetParams(obj)\n     * 清除之前所有的搜索参数，并将 params  对象自身 或 查询字符串 的每一个可枚举成员都插入一个新搜索参数。\n     * @param params : Object | string | URLSearchParams 该 对象自身 或 查询字符串 的所有成员都会被插入进来\n     */\n    resetParams: {\n      enumerable: false,\n      value: function (params) {\n        this.clear();\n        this.appendParams(params);\n      }\n    },\n\n\n  };\n\n\n  Object.defineProperties(globalThis.URLSearchParams.prototype, propertyDescriptors);\n}\n","import \"es-expand\"\n\n\nimport  \"./Location\"\nexport * from \"./URL\"\nimport  \"./URLSearchParams\"\n\n\n\n\n// Element：开始\n\n\n\n\n\n/**\n * elementIsMatchSelector(element,selector,parentNode)\n * 测试 在 parentNode 和其子元素中匹配的 选择器 selector 的元素是否包含元素 element\n * 或者可以理解为：\n * 测试目标 element 在 parentNode 节点或其子节点中 是否匹配指定的选择器 selector\n * @param element : Element   被测试的元素\n * @param selector : string   css 选择器\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n */\nexport function elementIsMatchSelector(element,selector,parentNode) {\n  if (!parentNode) {\n    parentNode = document;\n  }\n\n  if (!parentNode.contains(element)){\n     return false;\n  }\n\n  var elemList =  parentNode.querySelectorAll(selector);\n  var elemArray = Array.from(elemList);\n  return elemArray.some(function(qsElem){\n    return element.isSameNode(qsElem);\n  });\n\n}\n\n\n\n\n/**\n * isMatchSelector(selector,parentNode)\n * 测试 在 parentNode 和其子元素中匹配的 选择器 selector 的元素是否包含元素 当前元素\n * 或者可以理解为：\n * 当前元素 在 parentNode 节点或其子节点中 是否匹配指定的选择器 selector\n * @param selector : string   css 选择器\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n */\nElement.prototype.isMatchSelector = function isMatchSelector(selector,parentNode) {\n  return elementIsMatchSelector(this,selector,parentNode)\n};\n\n\n\n\n\n\n/**\n * elementIsMatchOption(element,option,parentNode)\n * 测试 在 parentNode 和其子元素中匹配的 匹配选项option 的元素是否包含元素 element\n * 或者可以理解为：\n * 测试目标 element 在 parentNode 节点或其子节点中 是否匹配指定的 匹配选项option\n * @param element : Element   被测试的元素\n * @param option : {tag:string, id:string, class:string | Array,  selector:string}   匹配选项；注意：各种选项配置项是且的关系，即：选项对象中设置的所有匹配项都匹配才算通过\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n *\n *\n * 注意：\n * option的各种配置项是且的关系，即：option中设置的所有配置项都匹配才算通过\n * option 中可配置如下属性：\n * tag ? : string   可选； 元素的标签名字\n * id ? : string  可选； 元素的id\n * class ? : string | Array  可选；元素的class ；如果是 字符串，则会与 元素的 className 进行比较，只有完全相等才算通过；如果是 数组，则元素的类包含数组中指定的所有类，才算通过\n * selector : string    可选；css选择器\n *\n */\nexport function elementIsMatchOption(element,option,parentNode) {\n  if (!parentNode) {\n    parentNode = document;\n  }\n\n  if (typeof option == \"string\"){\n    option = {selector:option};\n  }\n\n  return Object.keys(option).every(function (key) {\n    var value = option[key];\n    var keyMatch = true;\n    switch (key) {\n\n      case \"tag\":{\n        if (value){\n          value = value.toLowerCase();\n        }\n        keyMatch = element.localName == value && element.tagName.toLowerCase() == value;\n        break\n      }\n\n      case \"id\":{\n        keyMatch = element.id == value;\n        break\n      }\n\n      case \"class\":{\n\n        if (Array.isArray(value)) {\n          var classArr = Array.from(element.classList);\n          keyMatch = classArr.isContains(value);\n\n        }else {\n          keyMatch = element.className == value;\n        }\n\n        break\n      }\n\n\n      case \"selector\":{\n        keyMatch = element.isMatchSelector(value,parentNode);\n        break\n      }\n\n    }\n\n\n    return keyMatch;\n  });\n}\n\n\n\n\n\n\n/**\n * isMatchOption(option,parentNode)\n * 测试 在 parentNode 和其子元素中匹配的 匹配选项option 的元素是否包含当前元素\n * 或者可以理解为：\n * 当前元素 在 parentNode 节点或其子节点中 是否匹配指定的 匹配选项option\n * @param option : {tag:string, id:string, class:string | Array,  selector:string}   匹配选项；注意：各种选项配置项是且的关系，即：选项对象中设置的所有匹配项都匹配才算通过\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n *\n *\n * 注意：\n * option的各种配置项是且的关系，即：option中设置的所有配置项都匹配才算通过\n * option 中可配置如下属性：\n * tag ? : string   可选； 元素的标签名字\n * id ? : string  可选； 元素的id\n * class ? : string | Array  可选；元素的class ；如果是 字符串，则会与 元素的 className 进行比较，只有完全相等才算通过；如果是 数组，则元素的类包含数组中指定的所有类，才算通过\n * selector : string    可选；css选择器\n *\n */\nElement.prototype.isMatchOption =  function isMatchOption(option,parentNode) {\n  return elementIsMatchOption(this,option,parentNode);\n};\n\n\n\n\n\n\n/**\n * elementIsMatchSomeOptions(element,optionArr,parentNode)\n * 在 parentNode 节点或其子节点中，  optionArr 数组中 是否存在 元素 element  匹配的 选项\n * @param element : Element   被测试的元素\n * @param optionArr : Array<Option>   匹配选项数组；只要数组中存在匹配的选项对象，就算通过\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n *\n *\n * 注意：\n * Option的各种配置项是且的关系，即：Option 中设置的所有配置项都匹配才算通过\n * Option 中可配置如下属性：\n * tag ? : string   可选； 元素的标签名字\n * id ? : string  可选； 元素的id\n * class ? : string | Array  可选；元素的class ；如果是 字符串，则会与 元素的 className 进行比较，只有完全相等才算通过；如果是 数组，则元素的类包含数组中指定的所有类，才算通过\n * selector : string    可选；css选择器\n *\n */\nexport function elementIsMatchSomeOptions(element,optionArr,parentNode) {\n  return optionArr.some(function (option) {\n    return elementIsMatchOption(element,option,parentNode);\n  });\n}\n\n\n\n\n\n\n/**\n * isMatchSomeOptions(optionArr,parentNode)\n * 在 parentNode 节点或其子节点中，  optionArr 数组中 是否存在 元素 element  匹配的 选项\n * @param optionArr : Array<Option>   匹配选项数组；只要数组中存在匹配的选项对象，就算通过\n * @param parentNode ? : Element   可选；默认值：document ; 限定匹配的范围;\n * @returns boolean\n *\n *\n * 注意：\n * Option的各种配置项是且的关系，即：Option 中设置的所有配置项都匹配才算通过\n * Option 中可配置如下属性：\n * tag ? : string   可选； 元素的标签名字\n * id ? : string  可选； 元素的id\n * class ? : string | Array  可选；元素的class ；如果是 字符串，则会与 元素的 className 进行比较，只有完全相等才算通过；如果是 数组，则元素的类包含数组中指定的所有类，才算通过\n * selector : string    可选；css选择器\n *\n */\nElement.prototype.isMatchSomeOptions =  function isMatchSomeOptions(optionArr,parentNode) {\n  return elementIsMatchSomeOptions(this,optionArr,parentNode);\n};\n\n\n\n\n\n// Element：结束\n\n\n\n\n\n\n\n\n// EventTarget：开始\n\n\n\n\n\n\n\n\n\n/**\n * 创建并返回一个指定次数的事件监听器\n * @param handler : (event:Event, ...paramList)=>Void     用户的自定义的事件处理程序；\n * @param times : number    事件的触发次数\n * @param timeout : number    事件的有效时长\n * @param paramList : Array    自定义参数列表，该列表中的所有元素都会作为 handler 的参数跟在 event 事件对象后面；\n * @returns manyTimesEventListener : (event:Event)=>Void     可直接被当作事件处理程序的函数；\n *\n */\nexport function createManyTimesEventListener(handler,times,timeout,paramList) {\n\n  times = times == undefined ? 1 : times ;\n  timeout = timeout == undefined ? 300 : timeout ;\n\n  var eventMap = {};\n\n\n  /**\n   * 被创建的事件监听器\n   * @param event : Event   事件对象\n   */\n  var  manyTimesEventListener = function(event) {\n\n    var eventType = event.type ;\n    var eventList = eventMap[eventType];\n    if (!eventList){\n      eventList = [] ;\n      eventMap[eventType] = eventList ;\n    }\n\n\n\n    //找出事件的 type、target、currentTarget 都相同的事件对象；\n    var sameEvent = eventList.find(function(eventItem, index){\n      return eventItem.target == event.target && eventItem.listenTarget == event.currentTarget ;\n    });\n\n    if (sameEvent) {\n      sameEvent.currentTimes++ ;   //增加点击次数\n    }else {  //事件初次触发\n\n      /**\n       * 把 currentTimes 记录在 sameEvent 中；\n       * 把 currentTarget 保存在 listenTarget 属性中；因为事件响应链结束后，事件对象的 currentTarget 会被释放；\n       * @property currentTimes : number   记录相应事件的触发次数\n       */\n      sameEvent = event ;\n      sameEvent.currentTimes = 1;\n      sameEvent.listenTarget = sameEvent.currentTarget ;\n\n      //设置计时器\n      setTimeout((currentEvent)=> {\n        var currentTimes = currentEvent.currentTimes ;\n        if (currentTimes == times) { //符合次数才执行真正的事件处理函数\n          var handlerParamListh = paramList ? [currentEvent].concat(paramList) : [currentEvent] ;   //不能更改 paramList ，因为下次调用时还会用到\n          handler.apply(this,handlerParamListh);\n        }\n\n        currentEvent.listenTarget = null ;\n        var myEventTypeList = eventMap[currentEvent.type];\n        var currentEventIndex = myEventTypeList.indexOf(currentEvent);\n        myEventTypeList.splice(currentEventIndex,1);\n\n\n      },timeout,sameEvent);\n\n\n      eventList.push(sameEvent);\n    }\n\n\n\n  };\n\n\n  return manyTimesEventListener ;\n\n}\n\n\n// EventTarget：结束\n\n\n\n\n// Input：开始\n\n\n\n\n/**\n * 本方法是用于解决ipnut输入框在触摸屏中不灵敏的问题，该问题的原因有以下两点（其中第一个原因是主要原因）：\n * 1. 触发input元素获取焦点的事件有延迟；\n * 2. input元素的响应范围较小；\n *\n * 解决方案：\n * 当input或其父元素上触发无延迟事件时，用代码让input元素获取焦点；\n * 经过测试，推荐用无延迟的事件有：touchstart、click 等\n *\n *\n * focusInputOnTargetOfEvent(targetTests,eventName,excludeInput)\n * 在 eventName事件触发在符合条件的目标元素上时，将焦点聚焦到该元素的后代元素中的 第一个input元素 或 目标元素本身（当目标元素是input元素时）\n * @param targetTests : Array< targetFun | ElementMatchOption>    目标元素是否符合条件的测试选项列表，只要符合其中任一测试选项，就算通过\n * @param eventName ? : string     可选；默认值：\"click\"； 监听事件的名字\n * @param excludeInput ? :  boolean  可选；默认值：false ; 表示当点击的目标元素是input元素时，不做设置焦点的动作；即 排除目标元素是input的情况\n *\n *\n * targetFun : (targetElement)=>boolean   测试函数\n * elementMatchOption : {tag:string, id:string, class:string | Array,  selector:string}   匹配选项；注意：各种选项配置项是且的关系，即：选项对象中设置的所有匹配项都匹配才算通过\n *\n * elementMatchOption的各种配置项是且的关系，即：option中设置的所有配置项都匹配才算通过\n * option 中可配置如下属性：\n * tag ? : string   可选； 元素的标签名字\n * id ? : string  可选； 元素的id\n * class ? : string | Array  可选；元素的class ；如果是 字符串，则会与 元素的 className 进行比较，只有完全相等才算通过；如果是 数组，则元素的类包含数组中指定的所有类，才算通过\n * selector : string    可选；css选择器\n *\n */\nexport function focusInputOnTargetOfEvent(targetTests,eventName,excludeInput) {\n\n  if (!Array.isArray(targetTests)) {\n    targetTests = [targetTests];\n  }\n\n  if (!eventName){\n    eventName = \"click\"\n  }\n\n  /**\n   * 测试 testArr 中是否有 符合 target 的 test； 即\n   * @param target\n   * @param testArr\n   * @returns boolean\n   */\n  function testTarget(target,testArr) {\n    return testArr.some(function (test) {\n      if (typeof test == \"function\") {\n        return test(target);\n      }else {\n        return target.isMatchOption(test);\n      }\n    });\n  }\n\n\n  document.addEventListener(eventName,function (event) {\n\n    var target = event.target;\n\n    if (testTarget(target,targetTests)) {\n\n\n      if (target.localName == \"input\") {\n\n        if (!excludeInput) {\n          target.focus();\n        }\n\n      }else {\n\n        var inputDom = target.getElementsByTagName(\"input\")[0];\n        if (inputDom) {\n          inputDom.focus();\n        }\n\n      }\n\n\n    }\n\n  });\n\n}\n\n\n\n\n// Input：结束\n\n\n\n\n\n\n\n\n/**\n * 加载脚本文件\n * @param scriptProps : src | ScriptPropObj   脚本元素的 src 属性值，或脚本元素的属性配置对象\n * @return {HTMLScriptElement}\n */\nexport function loadScript(scriptProps) {\n  if (typeof scriptProps != \"object\"){\n    scriptProps = {src:scriptProps};\n  }\n\n  var {src,...otherPross} = scriptProps;\n  var scriptEle = document.createElement(\"script\");\n  Object.assign(scriptEle,otherPross);\n  scriptEle.src = src;\n  document.body.appendChild(scriptEle);\n  return scriptEle;\n}\n\n\n\n\n\n\n/**\n * prohibitWindowHeightChangeWhenInput(cancel)\n * 禁止当弹出键盘时 winodw 窗口改变高度\n * @param cancel ?: boolean    可选；默认值：false；表示是否要 取消 之前禁止\n */\nexport function prohibitWindowHeightChangeWhenInput(cancel) {\n\n  if (cancel){\n\n    var focusinHandler = prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusin_Handler__;\n    if (focusinHandler){\n      document.removeEventListener(\"focusin\",focusinHandler);\n      prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusin_Handler__ = null;\n    }\n\n\n    var focusoutHandler = prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusout_Handler__;\n    if (focusoutHandler){\n      document.removeEventListener(\"focusin\",focusoutHandler);\n      prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusin_Handler__ = null;\n    }\n\n    return;\n  }\n\n  // focusin 事件处理器\n  prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusin_Handler__ = function __prohibitWindowHeightChangeWhenInput_Focusin_Handler__(event) {\n    var htmlDom = document.documentElement;\n    var htmlStyle = htmlDom.style;\n    var bodyDom = document.body;\n    var bodyStyle = bodyDom.style;\n\n    //保存原始样式；\n    prohibitWindowHeightChangeWhenInput.__originalHeightStyle__ = {\n      html:htmlStyle.height,\n      body:bodyStyle.height\n    };\n\n    //设置html和body的高度为窗口变化前的空度\n    var compStyleOfHtml = window.getComputedStyle(htmlDom);\n    htmlStyle.height = compStyleOfHtml.height;\n    var compStyleOfBody = window.getComputedStyle(bodyDom);\n    bodyStyle.height = compStyleOfBody.height;\n  };\n\n  //把事件加到 document 是为加快事件的处理速度\n  //添加 focusin 事件处理器\n  document.addEventListener(\"focusin\",prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusin_Handler__);\n\n\n\n\n\n  // focusout 事件处理器\n  prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusout_Handler__ = function __prohibitWindowHeightChangeWhenInput_Focusout_Handler__(event) {\n    //还原html 和 body 的原始高度\n    var oriHeightStyle = prohibitWindowHeightChangeWhenInput.__originalHeightStyle__ || {html: null,body: null} ;\n\n    document.documentElement.style.height = oriHeightStyle.html;\n    document.body.style.height = oriHeightStyle.body;\n\n    prohibitWindowHeightChangeWhenInput.__originalHeightStyle__ = null;\n  };\n\n  //添加 focusout 事件处理器\n  document.addEventListener(\"focusout\",prohibitWindowHeightChangeWhenInput.__prohibitWindowHeightChangeWhenInput_Focusout_Handler__);\n\n\n}\n"],"sourceRoot":""}